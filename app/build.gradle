/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "io.freefair.lombok" version "6.4.1"
    id 'jacoco'
    id "com.github.hierynomus.license-base" version "0.16.1"
    id "org.openjfx.javafxplugin" version "0.0.12"
    id 'org.beryx.jlink' version '2.24.1'
    id 'groovy'
}

// Stuff for javafx
group 'Acquire'
version '1.0-SNAPSHOT'

javafx {
    version = '18'
    modules = ['javafx.controls','javafx.fxml']
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation ('org.projectlombok:lombok:1.18.22'){
        exclude group: 'lombok.extern.slf4j', module: 'lombok.extern.slf4j'
    }

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    //implementation 'org.slf4j:slf4j-api:1.7.13'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'org.controlsfx:controlsfx:11.1.0'

    testImplementation 'org.spockframework:spock-core:2.2-M1-groovy-3.0'
    testImplementation 'org.codehaus.groovy:groovy-all:3.0.8'

    testImplementation 'org.testfx:testfx-core:4.0.16-alpha'
    testImplementation 'org.testfx:testfx-spock:4.0.16-alpha'

    testImplementation  'org.testfx:testfx-junit5:4.0.16-alpha'
    implementation 'org.controlsfx:controlsfx:11.1.0'

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")
    implementation 'com.jfoenix:jfoenix:9.0.10'

    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha7'
    implementation 'org.codehaus.groovy:groovy-all:3.0.10'
    implementation 'org.spockframework:spock-core:2.1-groovy-3.0'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    // Define the main module for the application.
    //mainModule = 'Acquire'
    // Define the main class for the application.
    mainClass = 'Acquire.App'
}

javafx {
    version = "17.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

license {
    header = project.file('LICENSE')
    exclude(["**/*.png", "**/*.fxml"] as String)
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled false
        csv.enabled false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.85
            }
        }
    }
}


javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.runtimeClasspath
    destinationDir = file("${rootDir}/docs/javadoc")
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}